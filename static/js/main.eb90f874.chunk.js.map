{"version":3,"sources":["components/Header.js","graphql/mutations.js","components/AddSong.js","graphql/subscriptions.js","components/SongList.js","components/QueuedSongList.js","graphql/queries.js","components/SongPlayer.js","reducer.js","App.js","graphql/client.js","theme.js","index.js"],"names":["useStyles","makeStyles","theme","title","marginLeft","spacing","Header","classes","AppBar","position","color","Toolbar","HeadsetTwoTone","Typography","variant","component","className","role","ADD_OR_REMOVE_FROM_QUEUE","gql","ADD_SONG","DELETE_SONG","container","display","alignItems","urlInput","margin","addSongButton","dialog","textAlign","thumbnail","width","DEFAULT_SONG","duration","artist","AddSong","useMutation","addSong","error","React","useState","url","setUrl","playable","setPlayable","setDialog","song","setSong","handleChangeSong","event","target","name","value","prevSong","handleCloseDialog","a","player","nestedPlayer","getVideoData","songData","getYoutubeInfo","getCurrentSound","getSoundCloudInfo","variables","length","console","getDuration","video_id","author","Promise","resolve","reject","Number","user","username","artwork_url","replace","Error","setTimeout","handleInputError","field","graphQLErrors","extensions","path","includes","networkError","useEffect","isPlayable","SoundcloudPlayer","canPlay","YoutubePlayer","Dialog","open","onClose","DialogTitle","DialogContent","alt","src","TextField","onChange","label","fullWidth","helperText","DialogActions","Button","onClick","e","placeholder","type","InputProps","startAdornment","InputAdornment","Link","disabled","endIcon","AddBoxOutlined","hidden","onReady","GET_SONGS","songInfoContainer","songInfo","justifyContent","objectFit","height","Song","id","useContext","SongContext","state","dispatch","onCompleted","data","localStorage","setItem","JSON","stringify","addOrRemoveFromQueue","currentSongPlaying","setCurrentSongPlaying","deleteSong","isSongPlaying","isPlaying","Card","CardMedia","image","CardContent","gutterBottom","CardActions","IconButton","payload","size","Pause","PlayArrow","input","__typename","Delete","SongList","useSubscription","loading","style","flexDirection","marginTop","CircularProgress","songs","map","key","avatar","text","textOverflow","overflow","gridAutoFlow","gridTemplateColumns","gridGap","whiteSpace","QueuedSong","Avatar","QueuedSongList","queue","useMediaQuery","breakpoints","up","i","GET_QUEUED_SONGS","themes","details","padding","content","flex","controls","paddingLeft","paddingRight","playIcon","SongPlayer","useQuery","reactPlayerRef","useRef","played","setPlayed","seeking","setSeeking","playedSeconds","setPlayedSeconds","positionInQueue","setPositionInQueue","songIndex","findIndex","nextSong","SkipPrevious","SkipNext","Date","toISOString","substr","Slider","onMouseDown","onMouseUp","current","seekTo","newValue","min","max","step","ref","onProgress","playing","songReducer","action","createContext","undefined","App","initialSongState","useReducer","greaterThanMedium","greaterThanSm","Provider","Hidden","only","Grid","paddingTop","item","xs","md","right","top","left","bottom","client","ApolloClient","link","WebSocketLink","uri","options","reconnect","cache","InMemoryCache","typeDefs","resolvers","Mutation","_","queryResult","readQuery","query","newQueue","some","filter","writeQuery","Boolean","getItem","parse","writeData","createMuiTheme","palette","primary","blue","secondary","pink","ReactDOM","render","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.eb90f874.chunk.js","sourcesContent":["import React from 'react';\r\nimport { AppBar, Toolbar, Typography, makeStyles } from '@material-ui/core';\r\nimport { HeadsetTwoTone } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    title: {\r\n        marginLeft: theme.spacing(2)\r\n    }\r\n}));\r\n\r\nfunction Header() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar position=\"fixed\" color=\"primary\">\r\n            <Toolbar>\r\n                <HeadsetTwoTone />\r\n                <Typography variant=\"h6\" component=\"h1\" className={classes.title}>\r\n                    <span role=\"img\">🔥🎵</span>\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header;","import { gql } from 'apollo-boost';\r\n\r\nexport const ADD_OR_REMOVE_FROM_QUEUE = gql`\r\n    mutation addOrRemoveFromQueue($input: SongInput!) {\r\n        addOrRemoveFromQueue(input: $input) @client\r\n    }\r\n`\r\n\r\nexport const ADD_SONG = gql`\r\n    mutation addSong($title: String!, $artist: String!, $thumbnail: String!, $duration: Float!, $url: String!) {\r\n        insert_songs(objects: {title: $title, artist: $artist, thumbnail: $thumbnail, duration: $duration, url: $url}) {\r\n            affected_rows\r\n        }\r\n    }\r\n`\r\n\r\nexport const DELETE_SONG = gql`\r\n    mutation deleteSong($id:uuid) {\r\n        delete_songs(where: {id: {_eq: $id }}) {\r\n            returning {\r\n                title\r\n            }\r\n        }\r\n    }\r\n  \r\n`","import React from 'react';\r\nimport { TextField, \r\n        InputAdornment, \r\n        Button,\r\n        Dialog, \r\n        DialogContent, \r\n        DialogTitle, \r\n        DialogActions, \r\n        makeStyles\r\n} from '@material-ui/core';\r\nimport ReactPlayer from 'react-player';\r\nimport { Link, AddBoxOutlined } from '@material-ui/icons';\r\nimport SoundcloudPlayer from 'react-player/lib/players/SoundCloud';\r\nimport YoutubePlayer from 'react-player/lib/players/YouTube';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { ADD_SONG } from '../graphql/mutations';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    urlInput: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    addSongButton: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    dialog: {\r\n        textAlign: 'center'\r\n    },\r\n    thumbnail: {\r\n        width: '90%'\r\n    }\r\n}))\r\n\r\nconst DEFAULT_SONG = {\r\n    duration: 0,\r\n    title: '',\r\n    artist: '',\r\n    thumbnail: ''\r\n}\r\n\r\nfunction AddSong() {\r\n    const classes = useStyles();\r\n    const [addSong, { error }] = useMutation(ADD_SONG)\r\n    const [url, setUrl] = React.useState('');\r\n    const [playable, setPlayable] = React.useState(false);\r\n    const [dialog, setDialog] = React.useState(false);\r\n    const [song, setSong] = React.useState(DEFAULT_SONG)\r\n\r\n    React.useEffect(() => {\r\n        const isPlayable = SoundcloudPlayer.canPlay(url) || YoutubePlayer.canPlay(url);\r\n        setPlayable(isPlayable);\r\n    }, [url])\r\n\r\n    function handleChangeSong(event) {\r\n        const { name, value } = event.target;\r\n        setSong(prevSong => ({\r\n            ...prevSong,\r\n            [name]: value\r\n        }));\r\n    }\r\n\r\n    function handleCloseDialog() {\r\n        setDialog(false);\r\n    }\r\n\r\n    async function handleEditSong({ player }) {\r\n        const nestedPlayer = player.player.player;\r\n        let songData;\r\n        if (nestedPlayer.getVideoData) {\r\n            songData = getYoutubeInfo(nestedPlayer);\r\n        } else if (nestedPlayer.getCurrentSound) {\r\n            songData = await getSoundCloudInfo(nestedPlayer);\r\n        }\r\n        setSong({...songData, url});\r\n    }\r\n\r\n    async function handleAddSong() {\r\n        try {\r\n            const { url, thumbnail, duration, title, artist } = song;\r\n            await addSong({\r\n                variables: {\r\n                    url: url.length > 0 ? url : null,\r\n                    thumbnail: thumbnail.length > 0 ? thumbnail : null,\r\n                    duration: duration > 0 ? duration : null,\r\n                    title: title.length > 0 ? title : null,\r\n                    artist: artist.length > 0 ? artist : null\r\n                }\r\n            })\r\n            handleCloseDialog();\r\n            setSong(DEFAULT_SONG);\r\n            setUrl('');\r\n        } catch (error) {\r\n            console.error(\"ERROR ADDING SONG \", error)\r\n        }\r\n        \r\n    }\r\n\r\n    function getYoutubeInfo(player) {\r\n        const duration = player.getDuration();\r\n        const { title, video_id, author } = player.getVideoData();\r\n        const thumbnail = `http://img.youtube.com/vi/${video_id}/0.jpg`;\r\n        return {\r\n            duration,\r\n            title,\r\n            artist: author,\r\n            thumbnail\r\n        }\r\n    }\r\n\r\n    function getSoundCloudInfo(player) {\r\n        return new Promise ((resolve, reject) => {\r\n            player.getCurrentSound(songData => {\r\n                if (songData) {\r\n                    resolve({\r\n                        duration: Number(songData.duration / 1000), \r\n                        title: songData.title,\r\n                        artist: songData.user.username,\r\n                        thumbnail: songData.artwork_url.replace('-large', '-t500x500')\r\n                    })\r\n\r\n                    reject(new Error(\"failed to fetch soundcloud data\")); \r\n                    setTimeout(() => resolve(\"…\")); \r\n                }\r\n            })\r\n        })\r\n        \r\n    }\r\n\r\n    function handleInputError(field) {\r\n        return error?.graphQLErrors[0]?.extensions?.path.includes(field) || error?.networkError?.extensions?.path.includes(field);\r\n    }\r\n\r\n    const { thumbnail, title, artist } = song;\r\n   \r\n    return (\r\n        <div className={classes.container}>\r\n            <Dialog \r\n                open={dialog}\r\n                onClose={handleCloseDialog}\r\n                className={classes.dialog}\r\n            >\r\n                <DialogTitle>Edit Song</DialogTitle>\r\n                <DialogContent>\r\n                    <img \r\n                        className={classes.thumbnail}\r\n                        alt=\"song thumbnail\" \r\n                        src={thumbnail} />\r\n                    <TextField\r\n                        value={title}\r\n                        onChange={handleChangeSong}\r\n                        margin=\"dense\"\r\n                        name=\"title\"\r\n                        label=\"Title\"\r\n                        fullWidth\r\n                        error={handleInputError('title')}\r\n                        helperText={handleInputError('title') && 'Fill out field'}\r\n                    />\r\n                    <TextField\r\n                        value={artist}\r\n                        onChange={handleChangeSong}\r\n                        margin=\"dense\"\r\n                        name=\"artist\"\r\n                        label=\"Artist\"\r\n                        fullWidth\r\n                        error={handleInputError('artist')}\r\n                        helperText={handleInputError('artist') && 'Fill out field'}\r\n                    />\r\n                    <TextField\r\n                        value={thumbnail}\r\n                        onChange={handleChangeSong}\r\n                        margin=\"dense\"\r\n                        name=\"thumbnail\"\r\n                        label=\"Thumbnail\"\r\n                        fullWidth\r\n                        error={handleInputError('thumbnail')}\r\n                        helperText={handleInputError('thumbnail') && 'Fill out field'}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCloseDialog} color=\"secondary\">Cancel</Button>\r\n                    <Button onClick={handleAddSong} variant=\"outlined\" color=\"primary\">Add Song</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <TextField \r\n                className={classes.urlInput}\r\n                onChange={e => setUrl(e.target.value)}\r\n                value={url}\r\n                placeholder=\"Add Youtube or Soundcloud URL\"\r\n                type=\"url\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputProps={{\r\n                    startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                            <Link />\r\n                        </InputAdornment>\r\n                    )\r\n                }} \r\n            />\r\n            <Button\r\n                disabled={!playable}\r\n                className={classes.addSongButton}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                endIcon={<AddBoxOutlined/>}\r\n                onClick={() => setDialog(true)}\r\n            >Add</Button>\r\n            <ReactPlayer url={url} hidden onReady={handleEditSong} />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default AddSong;","import { gql } from 'apollo-boost';\r\n\r\nexport const GET_SONGS = gql`\r\n    subscription getSongs {\r\n        songs(order_by: {created_at: desc}) {\r\n        artist\r\n        duration\r\n        id\r\n        thumbnail\r\n        title\r\n        url\r\n        }\r\n    }\r\n`","import React from 'react';\r\nimport { CircularProgress, Card, CardMedia, CardContent, Typography, CardActions, IconButton, makeStyles } from '@material-ui/core';\r\nimport { PlayArrow, Delete, Pause, AddBoxOutlined } from '@material-ui/icons';\r\nimport { useSubscription, useMutation } from '@apollo/react-hooks';\r\nimport { GET_SONGS } from '../graphql/subscriptions';\r\nimport { ADD_OR_REMOVE_FROM_QUEUE, DELETE_SONG } from '../graphql/mutations';\r\nimport { SongContext } from '../App';\r\n\r\nfunction SongList() {\r\n    const { data, loading, error } = useSubscription(GET_SONGS);\r\n\r\n\r\n    if (loading) {\r\n        return (\r\n            <div style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                marginTop: 50\r\n            }}>\r\n                <CircularProgress/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return <div>Error fetching songs</div>\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            {data.songs.map(song => (\r\n                <Song key={song.id} song={song}/>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        margin: theme.spacing(3)\r\n    },\r\n    songInfoContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    songInfo: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    }, \r\n    thumbnail: {\r\n        objectFit: 'cover',\r\n        width: 140,\r\n        height: 140\r\n    }\r\n}))\r\n\r\nfunction Song({ song }) {\r\n    const { id } = song;\r\n    const { state, dispatch } = React.useContext(SongContext);\r\n    const classes = useStyles();\r\n    const [addOrRemoveFromQueue] = useMutation(ADD_OR_REMOVE_FROM_QUEUE, {\r\n        onCompleted: data => {\r\n            localStorage.setItem('queue', JSON.stringify(data.addOrRemoveFromQueue))\r\n        }\r\n    });\r\n    const { thumbnail, title, artist } = song;\r\n    const [currentSongPlaying, setCurrentSongPlaying] = React.useState(false);\r\n    const [deleteSong] = useMutation(DELETE_SONG);\r\n\r\n    React.useEffect(() => {\r\n       const isSongPlaying = state.isPlaying && id === state.song.id;\r\n       setCurrentSongPlaying(isSongPlaying);\r\n    }, [id, state.song.id, state.isPlaying]);\r\n\r\n    function handleTogglePlay() {\r\n        dispatch({ type: \"SET_SONG\", payload: { song }});\r\n        dispatch(state.isPlaying ? {type: \"PAUSE_SONG\"} : { type: \"PLAY_SONG\" });\r\n    }\r\n\r\n    function handleAddOrRemoveFromQueue() {\r\n        addOrRemoveFromQueue({\r\n            variables: { input: {...song, __typename: 'Song' } }\r\n        })\r\n    }\r\n\r\n    async function handleDeleteSong() {\r\n        try {\r\n            await deleteSong({\r\n                variables: {\r\n                    id: id\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.error(\"ERROR DELETING SONG\", error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.container}>\r\n            <div className={classes.songInfoContainer}>\r\n                <CardMedia image={thumbnail} className={classes.thumbnail}/>\r\n                <div className={classes.songInfo}>\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            {title}\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" component=\"p\" color=\"textSecondary\">\r\n                            {artist}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        <IconButton onClick={handleTogglePlay} size=\"small\" color=\"primary\">\r\n                            {currentSongPlaying ? <Pause /> : <PlayArrow /> }\r\n                        </IconButton>\r\n                        <IconButton onClick={handleAddOrRemoveFromQueue} size=\"small\">\r\n                            <AddBoxOutlined/>\r\n                        </IconButton>\r\n                        <IconButton onClick={handleDeleteSong} size=\"small\" >\r\n                            <Delete color=\"error\" />\r\n                        </IconButton>\r\n                    </CardActions>\r\n                </div>\r\n            </div>\r\n        </Card>\r\n    )\r\n        \r\n}\r\n\r\nexport default SongList;","import React from 'react'\r\nimport { Typography, Avatar, IconButton, makeStyles, useMediaQuery } from '@material-ui/core'\r\nimport { Delete } from '@material-ui/icons';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { ADD_OR_REMOVE_FROM_QUEUE } from '../graphql/mutations';\r\n\r\nfunction QueuedSongList({ queue }) {\r\n    const greaterThanMedium = useMediaQuery(theme => theme.breakpoints.up('md'));\r\n\r\n    return greaterThanMedium && ( \r\n        <div style={{ margin: '10px 0' }}>\r\n            <Typography color=\"textSecondary\" variant=\"button\">\r\n                QUEUE({queue.length})\r\n            </Typography>\r\n            {queue.map((song, i) => (\r\n                <QueuedSong key={i} song={song} />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        width: 44,\r\n        height: 44\r\n    },\r\n    text: {\r\n        textOverflow: 'ellipsis',\r\n        overflow: 'hidden'\r\n    },\r\n    container: {\r\n        display: 'grid',\r\n        gridAutoFlow: 'column',\r\n        gridTemplateColumns: '50px auto 50px',\r\n        gridGap: 12,\r\n        alignItems: 'center',\r\n        marginTop: 10\r\n    },\r\n    songInfoContainer: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap'\r\n    }\r\n});\r\n\r\nfunction QueuedSong({ song }) {\r\n    const classes = useStyles();\r\n    const [addOrRemoveFromQueue] = useMutation(ADD_OR_REMOVE_FROM_QUEUE, {\r\n        onCompleted: data => {\r\n            localStorage.setItem('queue', JSON.stringify(data.addOrRemoveFromQueue))\r\n        }\r\n    });\r\n    const { thumbnail, artist, title } = song;\r\n\r\n    function handleAddOrRemoveFromQueue() {\r\n        addOrRemoveFromQueue({\r\n            variables: { input: {...song, __typename: 'Song' } }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <Avatar src={thumbnail} alt=\"Song Thumbnail\" className={classes.avatar}/>\r\n            <div className={classes.songInfoContainer}>\r\n                <Typography variant=\"subtitle2\" className={classes.text}>{title}</Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" className={classes.text}>{artist}</Typography>\r\n            </div>\r\n            <IconButton onClick={handleAddOrRemoveFromQueue}>\r\n                <Delete color=\"error\" />\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QueuedSongList;","import { gql } from 'apollo-boost';\r\n\r\nexport const GET_QUEUED_SONGS = gql`\r\n    query getQueuedSongs {\r\n        queue @client {\r\n            id\r\n            duration\r\n            title\r\n            artist\r\n            thumbnail\r\n            url\r\n        }\r\n    }\r\n`","import React from 'react';\r\nimport QueuedSongList from './QueuedSongList';\r\nimport { Card, CardContent, Typography, IconButton, Slider, CardMedia, makeStyles } from \"@material-ui/core\";\r\nimport { SkipPrevious, PlayArrow, SkipNext, Pause } from '@material-ui/icons';\r\nimport { SongContext } from '../App';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { GET_QUEUED_SONGS } from '../graphql/queries';\r\nimport ReactPlayer from 'react-player';\r\n\r\nconst useStyles = makeStyles(themes => ({\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    details: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        padding: '0px 15px'\r\n    },\r\n    content: {\r\n        flex: '1 0 auto'\r\n    },\r\n    thumbnail: {\r\n        width: 150\r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        paddingLeft: themes.spacing(1),\r\n        paddingRight: themes.spacing(1)\r\n    },\r\n    playIcon: {\r\n        height: 38,\r\n        width: 38\r\n    }\r\n}))\r\n\r\nfunction SongPlayer() {\r\n    const { data } = useQuery(GET_QUEUED_SONGS);\r\n    const reactPlayerRef = React.useRef();\r\n    const { state, dispatch } = React.useContext(SongContext);\r\n    const [played, setPlayed] = React.useState(0);\r\n    const [seeking, setSeeking] = React.useState(false);\r\n    const [playedSeconds, setPlayedSeconds] = React.useState(0);\r\n    const [positionInQueue, setPositionInQueue] = React.useState(0)\r\n    const classes = useStyles();\r\n\r\n    React.useEffect(() => {\r\n        const songIndex = data.queue.findIndex(song => song.id === state.song.id);\r\n        setPositionInQueue(songIndex);\r\n    }, [data.queue, state.song.id]);\r\n\r\n    React.useEffect(() => {\r\n        const nextSong = data.queue[positionInQueue + 1];\r\n        if (nextSong && played >= 0.99) {\r\n            setPlayed(0);\r\n            dispatch({ type: \"SET_SONG\", payload: { song: nextSong }})\r\n        }\r\n    }, [data.queue, played, dispatch, positionInQueue]);\r\n\r\n    function handleTogglePlay() {\r\n        dispatch(state.isPlaying ? {type: \"PAUSE_SONG\"} : { type: \"PLAY_SONG\" });\r\n    }\r\n\r\n    function handleProgressChange(event, newValue) {\r\n        setPlayed(newValue);\r\n    }\r\n\r\n    function handleSeekMouseDown() {\r\n        setSeeking(true);\r\n    }\r\n\r\n    function handleSeekMouseUp() {\r\n        setSeeking(false);\r\n        reactPlayerRef.current.seekTo(played);\r\n    }\r\n\r\n    function formatDuration(seconds) {\r\n        return new Date(seconds * 1000).toISOString().substr(11, 8)\r\n    }\r\n\r\n    function handlePlayPreviousSong() {\r\n        const prevSong = data.queue[positionInQueue - 1];\r\n        if (prevSong) {\r\n            dispatch({ type: \"SET_SONG\", payload: { song: prevSong }})\r\n        }\r\n    }\r\n\r\n    function handlePlayNextSong() {\r\n        const nextSong = data.queue[positionInQueue + 1];\r\n        if (nextSong) {\r\n            dispatch({ type: \"SET_SONG\", payload: { song: nextSong }})\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                state.song.artist && <Card variant=\"outlined\" className={classes.container}>\r\n                <div className={classes.details}>\r\n                    <CardContent className={classes.content}>\r\n                        <Typography variant=\"h5\" component=\"h3\">\r\n                            { state.song.title }\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\r\n                            { state.song.artist }\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <div className={classes.controls}>\r\n                        <IconButton onClick={handlePlayPreviousSong}>\r\n                            <SkipPrevious />\r\n                        </IconButton>\r\n                        <IconButton onClick={handleTogglePlay}>\r\n                            {state.isPlaying ? <Pause className={classes.playIcon} /> : <PlayArrow className={classes.playIcon} />}\r\n                        </IconButton>\r\n                        <IconButton onClick={handlePlayNextSong}>\r\n                            <SkipNext />\r\n                        </IconButton>\r\n                        <Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\r\n                            {formatDuration(playedSeconds)}\r\n                        </Typography>\r\n                    </div>\r\n                    <Slider \r\n                        onMouseDown={handleSeekMouseDown}\r\n                        onMouseUp={handleSeekMouseUp}\r\n                        onChange={handleProgressChange}\r\n                        value={played} type=\"range\" min={0} max={1} step={0.01} />\r\n                </div>\r\n                <ReactPlayer \r\n                    ref={reactPlayerRef}\r\n                    onProgress={({ played, playedSeconds }) => {\r\n                        if (!seeking) {\r\n                            setPlayed(played);\r\n                            setPlayedSeconds(playedSeconds);\r\n                        }\r\n                    }}\r\n                    url={state.song.url} \r\n                    playing={state.isPlaying} \r\n                    hidden \r\n                />\r\n                <CardMedia\r\n                    className={classes.thumbnail}\r\n                    image={state.song.thumbnail}\r\n                />\r\n            </Card>\r\n            }\r\n            \r\n            <QueuedSongList queue={data.queue} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SongPlayer","function songReducer(state, action) {\r\n    switch(action.type){\r\n        case \"SET_SONG\": {\r\n            return {\r\n                ...state,\r\n                song: action.payload.song\r\n            };\r\n        }\r\n        case \"PLAY_SONG\": {\r\n            return {\r\n                ...state,\r\n                isPlaying: true\r\n            };\r\n        }\r\n        case \"PAUSE_SONG\": {\r\n            return {\r\n                ...state,\r\n                isPlaying: false\r\n            };\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n            \r\n    }\r\n}\r\n\r\nexport default songReducer","import React from 'react';\nimport Header from './components/Header';\nimport AddSong from './components/AddSong';\nimport SongList from './components/SongList';\nimport SongPlayer from './components/SongPlayer';\nimport { Grid, useMediaQuery, Hidden } from '@material-ui/core';\n\nimport songReducer from './reducer';\n\nexport const SongContext = React.createContext({\n  song: {\n    artist: undefined,\n    duration: undefined,\n    id: undefined,\n    thumbnail: undefined,\n    title: undefined,\n    url: undefined\n  },\n  isPlaying: false\n});\n\nfunction App() {\n  const initialSongState = React.useContext(SongContext);\n  const [state, dispatch] = React.useReducer(songReducer, initialSongState);\n\n  const greaterThanMedium = useMediaQuery(theme => theme.breakpoints.up('md'));\n  const greaterThanSm = useMediaQuery(theme => theme.breakpoints.up('sm'));\n\n  return (\n    <SongContext.Provider value={{state, dispatch}}>\n      <Hidden only=\"xs\">\n        <Header />\n      </Hidden>\n      \n      <Grid container spacing={3} style={{paddingLeft: '15px'}}>\n        <Grid style={{\n          paddingTop: greaterThanSm ? '80px' : 10\n        }} item xs={12} md={7}>\n          <AddSong />\n          <SongList />\n        </Grid>\n        <Grid style={greaterThanMedium ? {\n          position: 'fixed', \n          width: '100%',\n          right: 0, \n          top: 70} : {\n            position: 'fixed',\n            left: 0,\n            bottom: 0,\n            width: '100%'\n          }} item xs={12} md={5}>\n          <SongPlayer />\n        </Grid>\n      </Grid>    \n    </SongContext.Provider>\n  );\n}\n\nexport default App;\n","// import ApolloClient from 'apollo-boost';\r\n\r\n// const client = new ApolloClient({\r\n//     uri: 'https://react-apollo-music-share.herokuapp.com/v1/graphql'\r\n// });\r\n\r\n// export default client;\r\nimport ApolloClient from 'apollo-client';\r\nimport { WebSocketLink } from 'apollo-link-ws';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { gql } from 'apollo-boost';\r\nimport { GET_QUEUED_SONGS } from './queries';\r\n\r\nconst client = new ApolloClient({\r\n    link: new WebSocketLink({\r\n        uri: 'wss://react-apollo-music-share.herokuapp.com/v1/graphql',\r\n        options: {\r\n            reconnect: true\r\n        }\r\n    }),\r\n    cache: new InMemoryCache(),\r\n    typeDefs: gql`\r\n        type Song {\r\n            id: uuid!,\r\n            title: String!,\r\n            artist: String!,\r\n            thumbnail: String!,\r\n            duration: Float!,\r\n            url: String!\r\n        }\r\n\r\n        input SongInput {\r\n            id: uuid!,\r\n            title: String!,\r\n            artist: String!,\r\n            thumbnail: String!,\r\n            duration: Float!,\r\n            url: String!\r\n        }\r\n\r\n        type Query {\r\n            queue: [Song]!\r\n        }\r\n\r\n        type Mutation {\r\n            addOrRemoveFromQueue(input: SongInput!): [Song]!\r\n        }\r\n    `,\r\n    resolvers: {\r\n        Mutation: {\r\n            addOrRemoveFromQueue: (_, { input }, { cache }) => {\r\n                const queryResult = cache.readQuery({\r\n                    query: GET_QUEUED_SONGS\r\n                });\r\n\r\n                if (queryResult) {\r\n                    const { queue } = queryResult;\r\n                    const isInQueue = queue.some(song => song.id === input.id);\r\n                    const newQueue = isInQueue ? \r\n                        queue.filter(song => song.id !== input.id)\r\n                        : [...queue, input];\r\n                    cache.writeQuery({\r\n                        query: GET_QUEUED_SONGS,\r\n                        data: { queue: newQueue }\r\n                    });\r\n                    return newQueue\r\n                }\r\n\r\n                return [];\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nconst hasQueue = Boolean(localStorage.getItem('queue'));\r\n\r\nconst data = {\r\n    queue: hasQueue ? JSON.parse(localStorage.getItem('queue')) : []\r\n}\r\n\r\nclient.writeData({ data });\r\n\r\nexport default client;","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { blue, pink } from '@material-ui/core/colors';\r\n\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        type: \"dark\",\r\n        primary: blue,\r\n        secondary: pink\r\n    }\r\n});\r\n\r\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { MuiThemeProvider, CssBaseline } from '@material-ui/core';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport client from './graphql/client';\nimport theme from './theme';\n\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <MuiThemeProvider theme={theme}>\n            <CssBaseline/>\n            <App />\n        </MuiThemeProvider>\n    </ApolloProvider>\n    \n, document.getElementById('root'));"],"sourceRoot":""}